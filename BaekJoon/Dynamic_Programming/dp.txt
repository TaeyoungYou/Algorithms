Dynamic Programming (DP)

Purpose:
    모든 경우의 수를 따지는 수가 너무 많을 때,
    수행 시간을 단축하고자 만들어진 알고리즘

    DP가 없을 때, DFS를 사용해서 모든 경우의 수를 확인해서 비교

    DP는 추가적인 메모리를 사용해서 "중복 연산"을 줄이고,
    중복 연산을 줄여서 수행 속도를 개선한다

DP를 알아보고 푸는 방법:
    알아보는 방법
    1. DFS/BFS로 풀 수는 있지만 경우의 수가 너무 많은 문제 (경우의 수를 계산)
    2. 경우의 수의 중복적인 연산이 많을 때
    푸는 방법
    1. 많은 문제 풀기, 풀이 참고 (체득)